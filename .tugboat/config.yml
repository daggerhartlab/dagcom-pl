services:
  # What to call the service hosting the site. Because there is only
  # one service, it is automatically set as the default service, which
  # does a few things
  #   1. Clones the git repository into the service container
  #   2. Exposes port 80 to the Tugboat HTTP proxy
  #   3. Routes requests to the preview URL to this service
  apache:
    # Use the available version of Apache by not specifying a version
    image: tugboatqa/php:7-apache

    # Visual regression configuration
    # @link https://docs.tugboat.qa/visual-diffs/configure-visual-diffs/
    #visualdiffs:
    #  - url: /?p=pages-

    # A set of commands to run while building this service
    commands:
      # Commands that set up the basic preview infrastructure
      init:
        # Link the document root to the expected path. This example links the
        # root of the git repository to the docroot
        - ln -snf "${TUGBOAT_ROOT}/public" "${DOCROOT}"
        -
        # Nodejs
        - curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
        - apt-get install -y nodejs

        # Initial installation
        - mkdir -p .npm-global
        - npm install
        - npm run pl:install
        - npm run build

      # Commands that build the site. This is where you would add things
      # like feature reverts or any other drush commands required to
      # set up or configure the site. When a preview is built from a
      # base preview, the build workflow starts here, skipping the init
      # and update steps, because the results of those are inherited
      # from the base preview.
      build:
        - 'npm install'
        - npm run build
        - ./node_modules/.bin/gulp styleguide
